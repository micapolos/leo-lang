package leo32.leo

fun T.a(leo: Leo) = plus("a", leo)
fun T.actual(leo: Leo) = plus("actual", leo)
fun T.and(leo: Leo) = plus("and", leo)
fun T.argument(leo: Leo) = plus("argument", leo)
fun T.bit(leo: Leo) = plus("bit", leo)
fun T.byte(leo: Leo) = plus("byte", leo)
fun T.case(leo: Leo) = plus("case", leo)
fun T.center(leo: Leo) = plus("center", leo)
fun T.circle(leo: Leo) = plus("circle", leo)
fun T.define(leo: Leo) = plus("define", leo)
fun T.either(leo: Leo) = plus("either", leo)
fun T.error(leo: Leo) = plus("error", leo)
fun T.expected(leo: Leo) = plus("expected", leo)
fun T.gives(leo: Leo) = plus("gives", leo)
fun T.has(leo: Leo) = plus("has", leo)
fun T.it(leo: Leo) = plus("it", leo)
fun T.lhs(leo: Leo) = plus("lhs", leo)
fun T.negate(leo: Leo) = plus("negate", leo)
fun T.not(leo: Leo) = plus("not", leo)
fun T.one(leo: Leo) = plus("one", leo)
fun T.or(leo: Leo) = plus("or", leo)
fun T.quote(leo: Leo) = plus("quote", leo)
fun T.radius(leo: Leo) = plus("radius", leo)
fun T.rhs(leo: Leo) = plus("rhs", leo)
fun T.self(leo: Leo) = plus("self", leo)
fun T.switch(leo: Leo) = plus("switch", leo)
fun T.test(leo: Leo) = plus("test", leo)
fun T.to(leo: Leo) = plus("to", leo)
fun T.x(leo: Leo) = plus("x", leo)
fun T.y(leo: Leo) = plus("y", leo)
fun T.zero(leo: Leo) = plus("zero", leo)

val T.a get() = plus("a")
val T.and get() = plus("and")
val T.argument get() = plus("argument")
val T.bit get() = plus("bit")
val T.byte get() = plus("byte")
val T.center get() = plus("center")
val T.circle get() = plus("circle")
val T.lhs get() = plus("lhs")
val T.negate get() = plus("negate")
val T.not get() = plus("not")
val T.radius get() = plus("radius")
val T.rhs get() = plus("rhs")
val T.self get() = plus("self")
val T.one get() = plus("one")
val T.or get() = plus("or")
val T.two get() = plus("two")
val T.x get() = plus("x")
val T.y get() = plus("y")
val T.zero get() = plus("zero")
